buildscript {
    repositories {
        maven { url "https://repo.grails.org/grails/core" }
    }
    dependencies {
        classpath "org.grails:grails-gradle-plugin:$grailsVersion"
        classpath "gradle.plugin.com.github.erdi.webdriver-binaries:webdriver-binaries-gradle-plugin:2.6"
        classpath "org.grails.plugins:hibernate5:7.2.1"
        classpath "com.bertramlabs.plugins:asset-pipeline-gradle:3.3.4"
    }
}

plugins {
    id 'eclipse'
    id 'idea'
    id 'maven-publish'
}

version "0.4"
group "shared.views"

apply plugin:"org.grails.grails-plugin"
apply plugin:"com.bertramlabs.asset-pipeline"
apply plugin:"org.grails.grails-gsp"


repositories {
    mavenLocal()
    maven { url "https://repo.grails.org/grails/core" }
    mavenCentral()
}

configurations {
    developmentOnly
    runtimeClasspath {
        extendsFrom developmentOnly
    }
}

dependencies {
    developmentOnly("org.springframework.boot:spring-boot-devtools")

    implementation "org.springframework.boot:spring-boot-starter-logging"
    implementation "org.springframework.boot:spring-boot-autoconfigure"
    implementation "org.grails:grails-core"
    implementation "org.springframework.boot:spring-boot-starter-actuator"
    implementation "org.springframework.boot:spring-boot-starter-tomcat"
    implementation "org.grails:grails-web-boot"
    implementation "org.grails:grails-logging"
    implementation "org.grails:grails-plugin-rest"
    implementation "org.grails:grails-plugin-databinding"
    implementation "org.grails:grails-plugin-i18n"
    implementation "org.grails:grails-plugin-services"
    implementation "org.grails:grails-plugin-url-mappings"
    implementation "org.grails:grails-plugin-interceptors"
    implementation "org.grails.plugins:cache"
    implementation "org.grails.plugins:async"
    implementation "org.grails.plugins:scaffolding"
    implementation "org.grails.plugins:gsp"
    implementation "org.grails.plugins:hibernate5"
    implementation "org.hibernate:hibernate-core:5.6.3.Final"

    implementation 'org.grails.plugins:spring-security-core:4.0.3'

    implementation "org.hibernate:hibernate-ehcache:5.6.5.Final"

    implementation "edu.gatech.gtri.trustmark:tf-api:1.4.37"
    implementation "edu.gatech.gtri.trustmark:tf-api-impl:1.4.58"

    testImplementation "io.micronaut:micronaut-inject-groovy"

    console "org.grails:grails-console"

    profile "org.grails.profiles:web-plugin"

    runtimeOnly "com.bertramlabs.plugins:asset-pipeline-grails:3.3.4"

    testImplementation "org.grails:grails-gorm-testing-support"
    testImplementation "org.mockito:mockito-core"
    testImplementation "org.grails:grails-web-testing-support"
}

bootRun {
    ignoreExitValue true
    jvmArgs(
        '-Dspring.output.ansi.enabled=always', 
        '-noverify', 
        '-XX:TieredStopAtLevel=1',
        '-Xmx1024m')
    sourceResources sourceSets.main
    String springProfilesActive = 'spring.profiles.active'
    systemProperty springProfilesActive, System.getProperty(springProfilesActive)
}

tasks.withType(GroovyCompile) {
    configure(groovyOptions) {
        forkOptions.jvmArgs = ['-Xmx1024m']
    }
}

// enable if you wish to package this plugin as a standalone application
bootJar.enabled = false

publishing {
    publications {
        maven (MavenPublication) {
            groupId = 'shared.views'
            artifactId = 'tmf-shared-views'
            version = '0.4'

            from components.java
            artifact sourcesJar
            artifact javadocJar

            pom {
                name = 'TMF Shared Views Plugin'
                description = 'Plugin for common TMF features e.g. email, logins and error handling'
                url = 'https://github.com/foo/bar'
                licenses {
                    license {
                        name = 'The Apache License, Version 2.0'
                        url = 'https://www.apache.org/licenses/LICENSE-2.0.txt'
                    }
                }
                developers {
                    developer {
                        id = 'johnh'
                        name = 'John H'
                        email = 'johnh@foobar.com'
                    }
                }
                scm {
                    connection = 'scm:git@github.com:foo/bar.git'
                    developerConnection = 'scm:git@github.com:foo/bar.git'
                    url = 'https://github.com/foo/bar'
                }
            }
        }
    }
}

assets {
    packagePlugin = true
}
